#!/usr/bin/env python3
"""
Debug Phi Ground Action Generation
==================================

This script tests Phi Ground action generation to see what coordinates
it's actually producing and why the system might be using fixed coordinates.
"""

import asyncio
import sys
from pathlib import Path

# Add src to path
sys.path.insert(0, str(Path(__file__).parent.parent / "src"))
sys.path.insert(0, str(Path(__file__).parent.parent))

from src.ai.phi_ground import PhiGroundActionGenerator
from src.vision.engine import VisionEngine
import logging

# Configure logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)


async def debug_phi_ground_action():
    """Debug Phi Ground action generation."""
    
    # Find a screenshot to test with
    screenshot_path = None
    possible_paths = [
        "screenshot_1756248771.png",
        "screenshot_1756240714.png", 
        "screenshot_1756240716.png"
    ]
    
    for path in possible_paths:
        if Path(path).exists():
            screenshot_path = path
            break
    
    if not screenshot_path:
        logger.error("No screenshot found for testing")
        return
    
    logger.info(f"Using screenshot: {screenshot_path}")
    
    try:
        # Initialize Phi Ground
        phi_ground = PhiGroundActionGenerator()
        await phi_ground.initialize()
        logger.info("✅ Phi Ground initialized successfully")
        
        # Initialize Vision Engine
        vision_engine = VisionEngine()
        logger.info("✅ Vision Engine initialized successfully")
        
        # Analyze screenshot
        elements = vision_engine.analyze(screenshot_path)
        logger.info(f"✅ Found {len(elements)} UI elements")
        
        # Generate action
        action = await phi_ground.generate_touch_action(
            screenshot_path,
            "Automate app interaction",
            [],  # Empty action history
            elements
        )
        
        if action:
            logger.info("✅ Phi Ground generated action:")
            logger.info(f"   Type: {action.get('type')}")
            logger.info(f"   Coordinates: x={action.get('x')}, y={action.get('y')}")
            logger.info(f"   Reasoning: {action.get('reasoning', 'N/A')}")
            logger.info(f"   Confidence: {action.get('confidence', 'N/A')}")
            logger.info(f"   Full action: {action}")
            
            # Validate coordinates
            if phi_ground.validate_action_coordinates(action):
                logger.info("✅ Action coordinates are valid")
            else:
                logger.warning("❌ Action coordinates are invalid")
        else:
            logger.warning("❌ No action generated by Phi Ground")
            
    except Exception as e:
        logger.error(f"❌ Error during debug: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    asyncio.run(debug_phi_ground_action())
